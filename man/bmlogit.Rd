% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bmlogit.R
\name{bmlogit}
\alias{bmlogit}
\title{Constrained Multinominal Logistic Regression}
\usage{
bmlogit(Y, X, target_Y, pop_X, count_X, control = list())
}
\arguments{
\item{Y}{A matrix of binary outcomes where each columns represents a level of the outcome}

\item{X}{A model matrix of covariates. An intercept must be included.}

\item{target_Y}{A vector of proportions that the final probabilities should
align to (with tolerance set in the argument \code{tol_pred} in control). This should
have the same number of elements as the columns of \code{Y}.}

\item{pop_X}{A table of the unique combinations of the \code{X} variables.  Together
with \code{count_X}, this represents the traditional population table to post-stratify on.}

\item{count_X}{A vector of population counts for each of   the possible combinations
of \code{X}.  Values must be ordered to be the same as the rows of \code{pop_X}.}
}
\value{
The function returns a list of class \code{cmlogit} object.
}
\description{
Constrained Multinominal Logistic Regression
}
\examples{
library(dplyr)

## survey data
Y <- model.matrix(~ educ - 1, data = cc18_GA)
X <- model.matrix(~ age + female + race, data = cc18_GA)[, -1]

## population table
pop_X_df <-  count(acs_race_GA, age, female, race, wt = count, name = "count")
pop_X    <- model.matrix(~ age + female + race, data = pop_X_df)[, -1]
count_X  <- pull(pop_X_df, count)

## population target
edu_tgt  <- count(acs_educ_GA, educ, wt = count, name = "count") \%>\%
  pull(count)

## fit
fit <- bmlogit(
  Y = Y,
  X = X,
  pop_X    = pop_X,
  count_X  = count_X,
  target_Y = edu_tgt,
  control  = list(intercept = FALSE, tol_pred = 0.05))


}
