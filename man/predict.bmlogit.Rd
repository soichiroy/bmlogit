% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bmlogit_summary.R
\name{predict.bmlogit}
\alias{predict.bmlogit}
\title{Obtain the predicted probability}
\usage{
\method{predict}{bmlogit}(object, ..., newdata = NULL, counts = NULL, weights = NULL)
}
\arguments{
\item{object}{An output of \code{bmlogit()} function.}

\item{...}{Unused parameter, added to be consistent with regular predict}

\item{newdata}{A matrix of newdata. If not provided, the insample fit is returned.}

\item{counts}{A vector of population counts corresponding to the rows of \code{newdata}.
If provided \code{predict} function returns the predicted outcome at the aggregate level.}

\item{weights}{A vector of population weights corresponding to the rows of \code{newdata}.
If provided \code{predict} function returns the predicted outcome at the aggregate level.
If \code{counts} is provided, this argument will be ignored.}
}
\value{
A matrix (or a vector) of predicted probabilities.
}
\description{
Obtain the predicted probability
}
\examples{
library(dplyr)
library(tibble)

## survey data
Y <- model.matrix(~ educ - 1, data = cc18_GA)
colnames(Y) <- levels(cc18_GA$educ)
X <- model.matrix(~ age + female + race, data = cc18_GA)[, -1]

## population table
pop_X_df <- count(acs_race_GA, age, female, race, wt = count, name = "count")
pop_X    <- model.matrix(~ age + female + race, data = pop_X_df)[, -1]
count_X  <- pull(pop_X_df, count)

## population target
edu_tgt  <- count(acs_educ_GA, educ, wt = count, name = "count") \%>\%
  deframe()

## fit
fit <- bmlogit(
  Y = Y,
  X = X,
  pop_X    = pop_X,
  count_X  = count_X,
  target_Y = edu_tgt,
  control  = list(tol_pred = 0.05))

pred <- predict(fit)
dim(pred)
head(pred)

pred <- predict(fit, newdata = pop_X[1:3, ])
cbind(pop_X_df[1:3, ], pred)

pred <- predict(fit, newdata = pop_X, counts = count_X)
pred

}
